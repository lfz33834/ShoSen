//
//  SSLocationTool.m
//  ShoSenProject
//
//  Created by lifuzhou on 2018/11/7.
//  Copyright © 2018年 lifuzhou. All rights reserved.
//

#import "SSLocationTool.h"
#import <BMKLocationkit/BMKLocationComponent.h>

@interface SSLocationTool()<BMKLocationAuthDelegate,BMKLocationManagerDelegate>

@property (nonatomic, strong) BMKLocationManager *locationManager;

@end

@implementation SSLocationTool

static SSLocationTool * tools = nil;
+(instancetype)share
{
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        tools = [[SSLocationTool alloc]init];
    });
    return tools;
}

- (void)startLocation
{
    [[BMKLocationAuth sharedInstance] checkPermisionWithKey:@"TALOsbEmPWzt7lm5QqGWaqC8yfD9AQjb" authDelegate:self];
}

- (void)initBaiduLocationCallBack:(void(^)(NSString *obj))callBack
{
    //初始化实例
    _locationManager = [[BMKLocationManager alloc] init];
    //设置delegate
    _locationManager.delegate = self;
    //设置返回位置的坐标系类型
    _locationManager.coordinateType = BMKLocationCoordinateTypeBMK09LL;
    //设置距离过滤参数
    _locationManager.distanceFilter = kCLDistanceFilterNone;
    //设置预期精度参数
    _locationManager.desiredAccuracy = kCLLocationAccuracyBest;
    //设置应用位置类型
    _locationManager.activityType = CLActivityTypeAutomotiveNavigation;
    //设置是否自动停止位置更新
    _locationManager.pausesLocationUpdatesAutomatically = NO;
    //设置是否允许后台定位
    //_locationManager.allowsBackgroundLocationUpdates = YES;
    //设置位置获取超时时间
    _locationManager.locationTimeout = 10;
    //设置获取地址信息超时时间
    _locationManager.reGeocodeTimeout = 10;
    
    [_locationManager requestLocationWithReGeocode:YES withNetworkState:YES completionBlock:^(BMKLocation * _Nullable location, BMKLocationNetworkState state, NSError * _Nullable error) {
        
        if (error)
        {
            NSLog(@"locError:{%ld - %@};", (long)error.code, error.localizedDescription);
        }
        if (location) {//得到定位信息，添加annotation
            
            if (location.location) {
                NSLog(@"LOC = %@",location.location);
            }
            if (location.rgcData) {
                NSLog(@"rgc = %@",[location.rgcData description]);
            }
            callBack(location.rgcData.locationDescribe);
        }
        NSLog(@"netstate = %d",state);
        
    }];
}

- (void)fetchLocation
{
   
}


@end
