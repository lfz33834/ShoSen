//
//  SSMineCtrl.m
//  ShoSenProject
//
//  Created by lifuzhou on 2018/9/4.
//  Copyright © 2018年 lifuzhou. All rights reserved.
//

#import "SSMineCtrl.h"
#import "SSMineHeaderView.h"
#import "SSMineFooterView.h"
#import "SSMineCell.h"
#import "SSHomeModel.h"
#import "SSUserInfoVC.h"
#import "SSSettingVC.h"
#import "SSPartnerDetailVC.h"
#import "SSCircleVC.h"

@interface SSMineCtrl ()<UITableViewDataSource, UITableViewDelegate>

@property (nonatomic, strong) SSMineHeaderView *headerView;
@property (nonatomic, strong) SSMineFooterView *footerView;
@property (nonatomic, strong) NSMutableArray   *data_array;
@property (nonatomic, strong) UITableView      *mine_table;

@end

@implementation SSMineCtrl

- (void)viewDidLoad {
    [super viewDidLoad];
    [self wr_setNavBarTintColor:kColor(@"D6B35B")];
    [self wr_setNavBarBarTintColor:kColor(@"D6B35B")];
    [self wr_setNavBarTitleColor:kColor(@"333333")];
    [self.view addSubview:self.mine_table];
    
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(loginUserInfoUpdate) name:@"LoginNotification" object:nil];
    
    UIButton * rightBtn = [UIButton itemWithFream:CGRectMake(0.0, 0.0, 30.0f, 30.0f) withbackGroundColor:[UIColor clearColor] withTitle:@"" withTitleColor:[UIColor whiteColor] withTitleSize:16 withIsBold:NO];
    [rightBtn setImage:[UIImage imageNamed:@"mine_setting"] forState:UIControlStateNormal];
    [rightBtn addTarget:self action:@selector(rightBtnAction) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem * rightBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:rightBtn];
    self.navigationItem.rightBarButtonItem = rightBarButtonItem;
}

- (void)loginUserInfoUpdate
{
    [self updateUserInfo];
}

- (void)rightBtnAction
{
    if([SSAccountTool share].account)
    {
//        SSSettingVC *settingVC = [[SSSettingVC alloc]init];
//        settingVC.block = ^{
//            [self.headerView updateUserInfo];
//        };
        SSCircleVC *settingVC = [[SSCircleVC alloc]init];
        [self.navigationController pushViewController:settingVC animated:YES];
        
    }else{
        
        SSLoginVC *loginVC = [[SSLoginVC alloc]init];
        [self.navigationController pushViewController:loginVC animated:YES];
    }
}

#pragma --tableDataSource--
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    SSMineCell *cell = [SSMineCell cellWithTableView:tableView];
    cell.model = self.data_array[indexPath.row];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.data_array.count;
}
#pragma --tableDelegate--

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
     if([SSAccountTool share].account)
    {
        SSHomeModel *model = self.data_array[indexPath.row];
        FZBaseViewController *VC = [[NSClassFromString(model.className) alloc]init];
        [self.navigationController pushViewController:VC animated:YES];
    }else{
        SSLoginVC *loginVC = [[SSLoginVC alloc]init];
        [self.navigationController pushViewController:loginVC animated:YES];
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    return self.headerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 253;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 45;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    return [UIView new];
}

- (void)updateUserInfo
{
    SSAccount *account = [SSAccountTool share].account;
    if (account) {
        [FZHttpTool post:UserInfoUrl parameters:@{@"phone":account.phone} isShowHUD:YES httpToolSuccess:^(id  _Nullable json) {
            [[SSAccountTool share]saveAccountData:[json[@"data"]mutableCopy]];
            [self.headerView updateUserInfo];
        } failure:^(NSError * _Nullable error) {
        }];
    }
}

- (void)updateUserAddInfo
{
    SSAccount *account = [SSAccountTool share].account;
    NSDictionary *paramsDic = @{@"phone":account.phone};
    [FZHttpTool post:UserUpdateAddInfo parameters:paramsDic isShowHUD:YES httpToolSuccess:^(id json) {
        [self.headerView updateUserInfo];
    } failure:^(NSError *error) {
        [ProgressHUD showSuccess:@"请求失败"];
    }];
}


- (UITableView *)mine_table
{
    if (!_mine_table) {
        _mine_table = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kwidth, kheight - TABBAR_HEIGHT) style:UITableViewStylePlain];
        _mine_table.delegate = self;
        _mine_table.dataSource = self;
        _mine_table.scrollEnabled = NO;
        _mine_table.backgroundColor = kColor(@"f8f8f8");
        _mine_table.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _mine_table;
}

- (SSMineHeaderView *)headerView
{
    if (_headerView == nil) {
        WEAKSELF
        _headerView = [[NSBundle mainBundle]loadNibNamed:@"SSMineHeaderView" owner:self options:nil].lastObject;
        _headerView.block = ^(MineHeaderTapType type) {
            if([SSAccountTool share].account)
            {
                if (type == MineHeaderTapTypeUserInfo) {
                    SSUserInfoVC *infoVC = [[SSUserInfoVC alloc]init];
                    infoVC.block = ^{
                        [weakSelf updateUserInfo];
                    };
                    [weakSelf.navigationController pushViewController:infoVC animated:YES];
                }else if (type == MineHeaderTapTypePartner){
                    SSPartnerDetailVC *infoVC = [[SSPartnerDetailVC alloc]init];
                    [weakSelf.navigationController pushViewController:infoVC animated:YES];
                }
            }else{
                SSLoginVC *loginVC = [[SSLoginVC alloc]init];
                [weakSelf.navigationController pushViewController:loginVC animated:YES];
            }
        };

    }
    return _headerView;
}

- (NSMutableArray *)data_array
{
    if (_data_array == nil) {
        _data_array = [[NSMutableArray alloc]init];
        SSHomeModel *model1 = [[SSHomeModel alloc]init];
        model1.titleStr = @"我的MAX";
        model1.imageName = @"mine_car";
        model1.className = @"SSCarConfigureVC";
        [_data_array addObject:model1];
        SSHomeModel *model2 = [[SSHomeModel alloc]init];
        model2.titleStr = @"我的订单";
        model2.imageName = @"mine_order";
        model2.className = @"SSMineOrderListVC";
        [_data_array addObject:model2];
        SSHomeModel *model3 = [[SSHomeModel alloc]init];
        model3.titleStr = @"我的邀请码";
        model3.imageName = @"mine_invatationcode";
        model3.className = @"SSInvitationCodeVC";
        [_data_array addObject:model3];
        SSHomeModel *model4 = [[SSHomeModel alloc]init];
        model4.titleStr = @"我的津贴";
        model4.imageName = @"mine_perk";
        model4.className = @"SSMinePerkVC";
        [_data_array addObject:model4];
    }
    return _data_array;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

@end
